version: "2.4"
services:
  # postgresql:
  #   image: docker.io/bitnami/postgresql:16
  #   volumes:
  #     - "postgresql_data:/bitnami/postgresql"
  #   environment:
  #     # ALLOW_EMPTY_PASSWORD is recommended only for development.
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - POSTGRESQL_USERNAME=bn_sonarqube
  #     - POSTGRESQL_DATABASE=bitnami_sonarqube
  # sonarqube:
  #   image: docker.io/bitnami/sonarqube:10
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - "sonarqube_data:/bitnami/sonarqube"
  #   depends_on:
  #     - postgresql
  #   environment:
  #     # ALLOW_EMPTY_PASSWORD is recommended only for development.
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - SONARQUBE_DATABASE_HOST=postgresql
  #     - SONARQUBE_DATABASE_PORT_NUMBER=5432
  #     - SONARQUBE_DATABASE_USER=bn_sonarqube
  #     - SONARQUBE_DATABASE_NAME=bitnami_sonarqube

  sonarqube:
    image: sonarqube:9.9.4-community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube
    ports:
      - "9000:9000"
  db:
    image: postgres:16.1-alpine3.19
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      # POSTGRES_DB: sonar
    volumes:
      - postgresql_data:/var/lib/postgresql
  vault:
    image: vault:1.13.3
    ports:
      - "8200:8200"
    restart: always
    volumes:
      - vault_data:/vault/logs
      - vault_data:/vault/file
      - ./data/config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.hcl

volumes:
  postgresql_data:
    driver: local
  sonarqube_data:
    driver: local
  vault_data:
    driver: local